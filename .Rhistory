# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
options(tinytex.verbose = TRUE)
# Chunk 2: uni_logo
knitr::include_graphics("cunyLogo.JPG")
# Chunk 3: load-packages
#library(tidyverse) #loading all library needed for this assignment
library(knitr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(pdftools)
library(plotly)
library(rsconnect)
library(shiny)
library(shinyWidgets)
library(knitr)
library(dplyr)
library(tidyr)
library(stats)
library(statsr)
library(GGally)
library(pdftools)
library(correlation)
library(naniar)
library(urca)
library(tsibble)
library(tseries)
library(forecast)
library(caret)
set.seed(5582291332)
library(plyr)
library(arules)
library(arulesViz)
library(report)
library(cluster) # to perform different types of hierarchical clustering
# package functions used: daisy(), diana(), clusplot()
#install.packages("visdat")
library(visdat)
library(plotly)
library(reshape2)
library(mlbench)
library(corrplot)
library(pROC)
library(prodlim)
library(DataExplorer)
library(MASS)
#set.seed(34332)
# Chunk 4: load-packages
library(magrittr)
# load the text file which has the description of all the variable.
#UN_popM <- read.delim("https://raw.githubusercontent.com/asmozo24/DATA607_Final_Project/main/student.txt", stringsAsFactors=FALSE)
UN_popM <- read.csv("https://raw.githubusercontent.com/asmozo24/Research_Project-Capstone-/main/UN_USA_Pop_marital_%20age_sex.csv", stringsAsFactors=FALSE)
#s <- read.csv("", stringsAsFactors=FALSE)
head(UN_popM)
install.packages("skimr")
library(skimr)
skim(UN_popM)
install.packages("devtools")
library(devtools)
#devtools::install_github("ropensci/visdat")
library(visdat)
vis_miss(UN_popM)
vis_dat(UN_popM)
#install.packages("DataExplorer")
#if (!require(devtools)) install.packages("devtools")
#devtools::install_github("boxuancui/DataExplorer")
#library(DataExplorer)
DataExplorer::create_report(UN_popM)
install.packages("devtools")
remotes::install_github("paleolimbot/rbbt")
install.packages("rticles")
# Install remotes package if necessary
if(!requireNamespace("remotes", quietly = TRUE)) install.packages("remotes")
# Install the stable development version from GitHub
remotes::install_github("crsh/papaja")
# Install the latest development snapshot from GitHub
remotes::install_github("crsh/papaja@devel")
# World Covid19 data
covid19 <- read.csv("https://raw.githubusercontent.com/asmozo24/Research_Project-Capstone-/main/WHO-COVID-19-global-table-data.csv", stringsAsFactors = FALSE)
View(covid19)
glimpse(covid19)
glimpse(covid19)
#library(tidyverse) #loading all library needed for this assignment
library(knitr)
library(dplyr)
library(tidyr)
library(ggplot2)
library(pdftools)
library(plotly)
library(rsconnect)
library(shiny)
library(shinyWidgets)
library(knitr)
library(dplyr)
library(tidyr)
library(stats)
library(statsr)
library(GGally)
library(pdftools)
library(correlation)
library(naniar)
library(urca)
library(tsibble)
library(tseries)
library(forecast)
library(caret)
set.seed(1332)
library(plyr)
library(arules)
library(arulesViz)
library(report)
library(cluster) # to perform different types of hierarchical clustering
# package functions used: daisy(), diana(), clusplot()
#install.packages("visdat")
library(visdat)
library(plotly)
library(reshape2)
library(mlbench)
library(corrplot)
library(pROC)
library(prodlim)
library(DataExplorer)
library(MASS)
library(magrittr)
glimpse(covid19)
covid19$Ã¯..Name
covid19$WHO.Region
View(covid19)
covid19_1 <- read.csv("https://raw.githubusercontent.com/asmozo24/Research_Project-Capstone-/main/WHO-COVID-19-global-table-data1.csv", stringsAsFactors = FALSE)
View(covid19_1)
glimpse(covid19_1)
head(covid19_1)
covid19_1 <- read.csv("https://raw.githubusercontent.com/asmozo24/Research_Project-Capstone-/main/WHO-COVID-19-global-table-data1.csv", stringsAsFactors = FALSE)
glimpse(covid19_1)
covid19_1 %>%
head(13)
skim(covid19_1)
library(skimr)
skim(covid19_1)
setwd("~/R/Master_Research")
setwd("~/R/Master_Research")
#Dynamic EDA report
UN_popM %>%
eda_web_report(target = "dt", subtitle = "Marital Status",
output_dir = "./", output_file = "EDA.html", theme = "blue")
#Dynamic EDA report
covid19_1 %>%
eda_web_report(target = "dt", subtitle = "Top 10 world Covid19 Total Deaths",
output_dir = "./", output_file = "EDA.html", theme = "blue")
install.packages("dlookr")
#Dynamic EDA report
covid19_1 %>%
eda_web_report(target = "Deaths_cumulative_total", subtitle = "Top 10 world Covid19 Total Deaths",
output_dir = "./", output_file = "EDA.html", theme = "blue")
#s <- read.csv("", stringsAsFactors=FALSE)
#Dynamic EDA report
covid19_1 %>%
eda_web_report(target = "Deaths_cumulative_total", subtitle = "Top 10 world Covid19 Total Deaths",
output_dir = "./", output_file = "EDA.html", theme = "blue")
#Dynamic EDA report
covid19_1 %>%
eda_web_report(target = "Deaths_cumulative_total", subtitle = "Top 10 world Covid19 Total Deaths",
output_dir = "./", output_file = "EDA.html", theme = "blue")
#Dynamic EDA report
covid19_1 %>%
eda_web_report(target = "Deaths_cumulative_total", subtitle = "Top 10 world Covid19 Total Deaths",
output_dir = "./", output_file = "EDA.html", theme = "blue")
ggplot(covid19_1, aes(x = Deaths_cumulative_total, y = Countries_Names, fill = Cases_cumulative.total, label = Cases_cumulative.total)) +
geom_bar(stat = "identity") +
geom_text(size = 3, position = position_stack(vjust = 0.5))
covid19_1[,2:4]
covid19_1[,1:4]
View(covid19_1)
covid19_1[,1:5]
covid19_1a[,c(1,3,4,5)]
covid19_1[,c(1,3,4,5)]
y<-barplot(as.matrix(covid19_1[,c(1,3,4,5)]), beside=TRUE,horiz=TRUE,
legend.text=covid19_1$Countries_Names,args.legend=list(bty="n"),
col=brewer.pal(5,"Set1"),border="white",
xlim=c(0,8000000),xlab="Covid19 Cumulitive Cases and Deaths (1,000)",
main="Sales Figures")
x<-as.matrix(covid19_1[,c(1,3,4,5)])
text(x+2,y,labels=as.character(x))
y<-barplot(as.matrix(covid19_1[,c(1,3,4,5)]), beside=TRUE,horiz=TRUE,
legend.text=covid19_1$Countries_Names,args.legend=list(bty="n"),
col=brewer.pal(10,"Set1"),border="white",
xlim=c(0,8000000),xlab="Covid19 Cumulitive Cases and Deaths (1,000)",
main="Sales Figures")
x<-as.matrix(covid19_1[,c(1,3,4,5)])
text(x+2,y,labels=as.character(x))
install.packages("RColorBrewer")
library(RColorBrewer)
y<-barplot(as.matrix(covid19_1[,c(1,3,4,5)]), beside=TRUE,horiz=TRUE,
legend.text=covid19_1$Countries_Names,args.legend=list(bty="n"),
col=brewer.pal(10,"Set1"),border="white",
xlim=c(0,8000000),xlab="Covid19 Cumulitive Cases and Deaths (1,000)",
main="Sales Figures")
x<-as.matrix(covid19_1[,c(1,3,4,5)])
text(x+2,y,labels=as.character(x))
